def ecorr(cc_obj, amp):
    """
    Generated by gen-gccsd-equations.py at 2024-01-30 15:59:25
    Machine Info: Darwin 23.2.0
    Hostname:     Junjies-MacBook-Air.local
    Git Branch:   pauling
    Git Commit:   d9fa1416f9b6425ee2850274b4941fec6d0399df

    amp[0]: a+_v a_o
    amp[1]: a+_v a+_v a_o a_o
        """

    einsum = getattr(cc_obj, "einsum", None)
    assert einsum is not None, "einsum is not defined in cc_obj"

    # ih = 0, ibra = 0, len(tmp.terms) = 0
    # ih = 1, ibra = 0, len(tmp.terms) = 2
    res  =     1.000000 * einsum('ia,ai->'           , h1e.ov, amp[0])
    res +=     0.500000 * einsum('ijab,abji->'       , phys_eris.oovv, amp[1])

    # ih = 2, ibra = 0, len(tmp.terms) = 2
    res +=    -0.500000 * einsum('ijab,ai,bj->'      , phys_eris.oovv, amp[0], amp[0])
    res +=     0.500000 * einsum('ijab,bi,aj->'      , phys_eris.oovv, amp[0], amp[0])

    # ih = 3, ibra = 0, len(tmp.terms) = 0
    # ih = 4, ibra = 0, len(tmp.terms) = 0
    return res

def resd1(cc_obj, amp):
    """
    Generated by gen-gccsd-equations.py at 2024-01-30 15:59:25
    Machine Info: Darwin 23.2.0
    Hostname:     Junjies-MacBook-Air.local
    Git Branch:   pauling
    Git Commit:   d9fa1416f9b6425ee2850274b4941fec6d0399df

    amp[0]: a+_v a_o
    amp[1]: a+_v a+_v a_o a_o
    
    res   :  a+_o a_v
    """

    einsum = getattr(cc_obj, "einsum", None)
    assert einsum is not None, "einsum is not defined in cc_obj"

    # ih = 0, ibra = 1, len(tmp.terms) = 1
    res  =     1.000000 * einsum('ai->ai'            , h1e.vo)

    # ih = 1, ibra = 1, len(tmp.terms) = 7
    res +=    -1.000000 * einsum('ji,aj->ai'         , h1e.oo, amp[0])
    res +=     1.000000 * einsum('ab,bi->ai'         , h1e.vv, amp[0])
    res +=    -1.000000 * einsum('jb,abji->ai'       , h1e.ov, amp[1])
    res +=     1.000000 * einsum('jaib,bj->ai'       , phys_eris.ovov, amp[0])
    res +=    -1.000000 * einsum('jabi,bj->ai'       , phys_eris.ovvo, amp[0])
    res +=    -1.000000 * einsum('jkib,abkj->ai'     , phys_eris.ooov, amp[1])
    res +=    -1.000000 * einsum('jabc,bcji->ai'     , phys_eris.ovvv, amp[1])

    # ih = 2, ibra = 1, len(tmp.terms) = 9
    res +=    -1.000000 * einsum('jb,bi,aj->ai'      , h1e.ov, amp[0], amp[0])
    res +=     1.000000 * einsum('jkib,aj,bk->ai'    , phys_eris.ooov, amp[0], amp[0])
    res +=    -1.000000 * einsum('jkib,ak,bj->ai'    , phys_eris.ooov, amp[0], amp[0])
    res +=     1.000000 * einsum('jabc,bi,cj->ai'    , phys_eris.ovvv, amp[0], amp[0])
    res +=    -1.000000 * einsum('jabc,ci,bj->ai'    , phys_eris.ovvv, amp[0], amp[0])
    res +=    -1.000000 * einsum('jkbc,aj,bcki->ai'  , phys_eris.oovv, amp[0], amp[1])
    res +=    -1.000000 * einsum('jkbc,bi,ackj->ai'  , phys_eris.oovv, amp[0], amp[1])
    res +=     1.000000 * einsum('jkbc,bj,acki->ai'  , phys_eris.oovv, amp[0], amp[1])
    res +=    -1.000000 * einsum('jkbc,cj,abki->ai'  , phys_eris.oovv, amp[0], amp[1])

    # ih = 3, ibra = 1, len(tmp.terms) = 2
    res +=     1.000000 * einsum('jkbc,bi,aj,ck->ai' , phys_eris.oovv, amp[0], amp[0], amp[0])
    res +=    -1.000000 * einsum('jkbc,ci,aj,bk->ai' , phys_eris.oovv, amp[0], amp[0], amp[0])

    # ih = 4, ibra = 1, len(tmp.terms) = 0
    return res